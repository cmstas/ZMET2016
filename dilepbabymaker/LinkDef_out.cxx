//
// File generated by rootcint at Wed May 20 12:59:54 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME LinkDef_out
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "LinkDef_out.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void babyMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void babyMaker_Dictionary();
   static void *new_babyMaker(void *p = 0);
   static void *newArray_babyMaker(Long_t size, void *p);
   static void delete_babyMaker(void *p);
   static void deleteArray_babyMaker(void *p);
   static void destruct_babyMaker(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::babyMaker*)
   {
      ::babyMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::babyMaker),0);
      static ::ROOT::TGenericClassInfo 
         instance("babyMaker", "./ScanChain.h", 19,
                  typeid(::babyMaker), DefineBehavior(ptr, ptr),
                  0, &babyMaker_Dictionary, isa_proxy, 0,
                  sizeof(::babyMaker) );
      instance.SetNew(&new_babyMaker);
      instance.SetNewArray(&newArray_babyMaker);
      instance.SetDelete(&delete_babyMaker);
      instance.SetDeleteArray(&deleteArray_babyMaker);
      instance.SetDestructor(&destruct_babyMaker);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::babyMaker*)
   {
      return GenerateInitInstanceLocal((::babyMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::babyMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void babyMaker_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::babyMaker*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_babyMaker(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::babyMaker : new ::babyMaker;
   }
   static void *newArray_babyMaker(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::babyMaker[nElements] : new ::babyMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_babyMaker(void *p) {
      delete ((::babyMaker*)p);
   }
   static void deleteArray_babyMaker(void *p) {
      delete [] ((::babyMaker*)p);
   }
   static void destruct_babyMaker(void *p) {
      typedef ::babyMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::babyMaker

/********************************************************
* LinkDef_out.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableLinkDef_out();

extern "C" void G__set_cpp_environmentLinkDef_out() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("ScanChain.h");
  G__cpp_reset_tagtableLinkDef_out();
}
#include <new>
extern "C" int G__cpp_dllrevLinkDef_out() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* babyMaker */
static int G__LinkDef_out_574_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   babyMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new babyMaker[n];
     } else {
       p = new((void*) gvp) babyMaker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new babyMaker;
     } else {
       p = new((void*) gvp) babyMaker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDef_outLN_babyMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_574_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((babyMaker*) G__getstructoffset())->ScanChain((TChain*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((babyMaker*) G__getstructoffset())->ScanChain((TChain*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_574_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((babyMaker*) G__getstructoffset())->MakeBabyNtuple((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_574_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((babyMaker*) G__getstructoffset())->InitBabyNtuple();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_574_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((babyMaker*) G__getstructoffset())->FillBabyNtuple();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out_574_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((babyMaker*) G__getstructoffset())->CloseBabyNtuple();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_out_574_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   babyMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new babyMaker(*(babyMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDef_outLN_babyMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef babyMaker G__TbabyMaker;
static int G__LinkDef_out_574_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (babyMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((babyMaker*) (soff+(sizeof(babyMaker)*i)))->~G__TbabyMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (babyMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((babyMaker*) (soff))->~G__TbabyMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_out_574_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   babyMaker* dest = (babyMaker*) G__getstructoffset();
   *dest = *(babyMaker*) libp->para[0].ref;
   const babyMaker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__LinkDef_out__0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("snprintf: more than 56 var args\n");
   }
      G__letint(result7, 105, (long) snprintf((char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) strlcpy((char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) strlcat((char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1266(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(Bool_t*) G__Boolref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1267(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(Char_t*) G__Charref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1268(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(UChar_t*) G__UCharref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1269(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(Short_t*) G__Shortref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1270(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(UShort_t*) G__UShortref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1271(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1272(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(UInt_t*) G__UIntref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1273(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(Long_t*) G__Longref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1274(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(ULong_t*) G__ULongref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1275(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(Long64_t*) G__Longlongref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1276(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(ULong64_t*) G__ULonglongref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1277(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(Float_t*) G__Floatref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1278(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1279(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, (Char_t*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1280(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(TString*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1281(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1282(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (Char_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1283(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (UChar_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1284(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (Short_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1285(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (UShort_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1286(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1287(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1288(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (Long_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1289(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (ULong_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1290(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (Long64_t) G__Longlong(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1291(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (ULong64_t) G__ULonglong(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1292(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (Float_t) G__double(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1293(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1294(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (const Char_t*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1295(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, *(TString*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1296(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (TObject*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1297(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1298(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1299(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1300(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+(*(TString*) libp->para[0].ref, (char) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1301(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+(*(TString*) libp->para[0].ref, (Long_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1302(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+(*(TString*) libp->para[0].ref, (ULong_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1303(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+(*(TString*) libp->para[0].ref, (Long64_t) G__Longlong(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1304(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+(*(TString*) libp->para[0].ref, (ULong64_t) G__ULonglong(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1305(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+((char) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1306(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+((Long_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1307(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+((ULong_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1308(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+((Long64_t) G__Longlong(libp->para[0]), *(TString*) libp->para[1].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1309(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = operator+((ULong64_t) G__ULonglong(libp->para[0]), *(TString*) libp->para[1].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1310(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1311(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1312(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(TSubString*) libp->para[0].ref, *(TSubString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1313(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(TSubString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1314(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(TSubString*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1315(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (TString*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1316(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const istream& obj = operator>>(*(istream*) libp->para[0].ref, *(TString*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1317(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(TString*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1318(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, libp->para[1].ref ? *(TString**) libp->para[1].ref : *(TString**) (void*) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1319(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ToLower(*(TString*) libp->para[0].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1320(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ToUpper(*(TString*) libp->para[0].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1321(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) Hash(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1322(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) Hash((TString*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1323(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) Hash((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1324(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("Form: more than 56 var args\n");
   }
      G__letint(result7, 67, (long) Form((const char*) G__int(libp->para[0]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[1], lval[2], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1325(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("Printf: more than 56 var args\n");
   }
      Printf((const char*) G__int(libp->para[0]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[1], lval[2], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1326(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) Strip((const char*) G__int(libp->para[0]), (char) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) Strip((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1327(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StrDup((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1328(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Compress((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1329(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EscChar((const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (char*) G__int(libp->para[3])
, (char) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1330(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UnEscChar((const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (char*) G__int(libp->para[3])
, (char) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1331(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1332(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1333(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1334(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1335(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1336(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1337(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1338(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1339(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1340(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1341(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1342(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1343(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1344(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1345(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1346(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1347(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(TString*) libp->para[0].ref, *(TSubString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1348(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==((const char*) G__int(libp->para[0]), *(TSubString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1349(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(TSubString*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1350(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(TSubString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1351(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(TSubString*) libp->para[0].ref, *(TSubString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1352(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(TString*) libp->para[0].ref, *(TSubString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1353(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=((const char*) G__int(libp->para[0]), *(TSubString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1354(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(TDatime*) libp->para[0].ref, *(TDatime*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1355(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(TDatime*) libp->para[0].ref, *(TDatime*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1356(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(TDatime*) libp->para[0].ref, *(TDatime*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1357(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(TDatime*) libp->para[0].ref, *(TDatime*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1358(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(TDatime*) libp->para[0].ref, *(TDatime*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1359(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(TDatime*) libp->para[0].ref, *(TDatime*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1360(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, *(TUUID*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1361(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, *(TUUID*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1362(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(TUUID*) libp->para[0].ref, *(TUUID*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1363(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(TUUID*) libp->para[0].ref, *(TUUID*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1364(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (TArray*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1365(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, libp->para[1].ref ? *(TArray**) libp->para[1].ref : *(TArray**) (void*) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1366(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, libp->para[1].ref ? *(TArrayD**) libp->para[1].ref : *(TArrayD**) (void*) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1367(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (TArrayD*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1368(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator>>(*(TBuffer*) libp->para[0].ref, libp->para[1].ref ? *(TArrayI**) libp->para[1].ref : *(TArrayI**) (void*) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1369(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBuffer& obj = operator<<(*(TBuffer*) libp->para[0].ref, (TArrayI*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_out__0_1766(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreeBranchImpRef(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TClass*) G__int(libp->para[2]), (EDataType) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* babyMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLinkDef_out {
 public:
  G__Sizep2memfuncLinkDef_out(): p(&G__Sizep2memfuncLinkDef_out::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLinkDef_out::*p)();
};

size_t G__get_sizep2memfuncLinkDef_out()
{
  G__Sizep2memfuncLinkDef_out a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLinkDef_out() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLinkDef_out() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LorentzVector>",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > >",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDef_outLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* babyMaker */
static void G__setup_memvarbabyMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDef_outLN_babyMaker));
   { babyMaker *p; p=(babyMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_TFile),-1,-1,4,"BabyFile_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_TTree),-1,-1,4,"BabyTree_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"lumi=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"evt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"isData=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"evt_scale1fb=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"evt_xsec=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"evt_kfactor=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"evt_filter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"evt_nEvts=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"evt_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"puWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nVert=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTrueInt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"rho=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"rho25=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nJet40=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nBJet40=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nMuons10=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nElectrons10=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTaus20=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nGammas20=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"njets=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ht=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"gen_ht=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"njets_eta30=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ht_eta30=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"hyp_type=",0,"0 = ee; 1 = mm; 2 = em; 2 = me");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"evt_type=",0,"0 = OS; 1 = SS; 2 = photon+jets");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dilmass=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dilpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dRll=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"matched_neutralemf=",0,"neutral em fraction for jet closest to photon within dR = .1");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"elveto=",0,"Reject photons which have electron of pT > 10 GeV within dR < 0.2");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mt2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mt2j=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mt2j_eta30=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"met_pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"met_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"met_rawPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"met_rawPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"met_caloPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"met_caloPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"met_genPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"met_genPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sumet_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"jzb_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"jzb_T1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"jgb_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"jgb_T1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_EcalDeadCellTriggerPrimitiveFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_trkPOG_manystripclus53X=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_ecalLaserCorrFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_trkPOG_toomanystripclus53X=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_hcalLaserEventFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_trkPOG_logErrorTooManyClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_trkPOGFilters=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_trackingFailureFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_CSCTightHaloFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_HBHENoiseFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_goodVertices=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_eeBadScFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Flag_METFilters=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HLT_HT900=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HLT_MET170=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HLT_ht350met120=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HLT_SingleMu=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HLT_DoubleEl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HLT_MuEG=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HLT_DoubleMu=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HLT_Photons=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nlep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<LorentzVector>"),-1,4,"lep_p4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_pt=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_eta=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_phi=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_mass=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_charge=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_pdgId=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_dxy=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_dz=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_tightId=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_relIso03=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_relIso03MREA=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_relIso03MRDB=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_relIso03MRNC=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"lep_relIso04=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_mcMatchId=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_lostHits=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_convVeto=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_tightCharge=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_islead=",0,"[nlep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"lep_istail=",0,"[nlep]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ntau=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tau_pt=",0,"[ntau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tau_eta=",0,"[ntau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tau_phi=",0,"[ntau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tau_mass=",0,"[ntau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"tau_charge=",0,"[ntau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tau_dxy=",0,"[ntau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tau_dz=",0,"[ntau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"tau_idCI3hit=",0,"[ntau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tau_isoCI3hit=",0,"[ntau]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ngamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<LorentzVector>"),-1,4,"gamma_p4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_pt=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_eta=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_phi=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_mass=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_sigmaIetaIeta=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_chHadIso=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_neuHadIso=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_phIso=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_r9=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_hOverE=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"gamma_idCutBased=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"gamma_mcMatchId=",0,"[ngamma]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"gamma_genIso=",0,"[ngamma]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"gamma_nJet40=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"gamma_nBJet40=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ngenPart=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genPart_pt=",0,"[ngenPart]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genPart_eta=",0,"[ngenPart]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genPart_phi=",0,"[ngenPart]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genPart_mass=",0,"[ngenPart]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genPart_pdgId=",0,"[ngenPart]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genPart_status=",0,"[ngenPart]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genPart_charge=",0,"[ngenPart]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genPart_motherId=",0,"[ngenPart]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genPart_grandmaId=",0,"[ngenPart]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ngenLep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLep_pt=",0,"[ngenLep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLep_eta=",0,"[ngenLep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLep_phi=",0,"[ngenLep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLep_mass=",0,"[ngenLep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genLep_pdgId=",0,"[ngenLep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genLep_status=",0,"[ngenLep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLep_charge=",0,"[ngenLep]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genLep_sourceId=",0,"[ngenLep]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ngenTau=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genTau_pt=",0,"[ngenTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genTau_eta=",0,"[ngenTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genTau_phi=",0,"[ngenTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genTau_mass=",0,"[ngenTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genTau_pdgId=",0,"[ngenTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genTau_status=",0,"[ngenTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genTau_charge=",0,"[ngenTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genTau_sourceId=",0,"[ngenTau]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ngenLepFromTau=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLepFromTau_pt=",0,"[ngenLepFromTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLepFromTau_eta=",0,"[ngenLepFromTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLepFromTau_phi=",0,"[ngenLepFromTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLepFromTau_mass=",0,"[ngenLepFromTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genLepFromTau_pdgId=",0,"[ngenLepFromTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genLepFromTau_status=",0,"[ngenLepFromTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"genLepFromTau_charge=",0,"[ngenLepFromTau]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"genLepFromTau_sourceId=",0,"[ngenLepFromTau]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"njet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<LorentzVector>"),-1,4,"jet_p4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<LorentzVector>"),-1,4,"jets_p4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<LorentzVector>"),-1,4,"jets_eta30_p4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_pt=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_eta=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_phi=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_mass=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_btagCSV=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_rawPt=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_mcPt=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"jet_mcFlavour=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_quarkGluonID=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"jet_area=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"jet_id=",0,"[njet]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"jet_puId=",0,"[njet]");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLinkDef_out() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncbabyMaker(void) {
   /* babyMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDef_outLN_babyMaker));
   G__memfunc_setup("babyMaker",910,G__LinkDef_out_574_0_1, 105, G__get_linked_tagnum(&G__LinkDef_outLN_babyMaker), -1, 0, 0, 5, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanChain",872,G__LinkDef_out_574_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TChain' - 0 - - u 'string' - 0 '\"testSample\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeBabyNtuple",1396,G__LinkDef_out_574_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitBabyNtuple",1418,G__LinkDef_out_574_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillBabyNtuple",1405,G__LinkDef_out_574_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseBabyNtuple",1516,G__LinkDef_out_574_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("babyMaker", 910, G__LinkDef_out_574_0_7, (int) ('i'), G__get_linked_tagnum(&G__LinkDef_outLN_babyMaker), -1, 0, 1, 1, 1, 0, "u 'babyMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~babyMaker", 1036, G__LinkDef_out_574_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_out_574_0_9, (int) ('u'), G__get_linked_tagnum(&G__LinkDef_outLN_babyMaker), -1, 1, 1, 1, 1, 0, "u 'babyMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLinkDef_out() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLinkDef_out() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
   G__memfunc_setup("snprintf", 884, G__LinkDef_out__0_128, 105, -1, -1, 0, 3, 8, 1, 0, 
"C - - 0 - string k - 'size_t' 0 - length "
"C - - 10 - format", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("strlcpy", 785, G__LinkDef_out__0_129, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 0, 
"C - - 0 - dst C - - 10 - src "
"k - 'size_t' 0 - siz", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("strlcat", 765, G__LinkDef_out__0_130, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 0, 
"C - - 0 - dst C - - 10 - src "
"k - 'size_t' 0 - siz", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1266, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf g - 'Bool_t' 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1267, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf c - 'Char_t' 1 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1268, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf b - 'UChar_t' 1 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1269, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf s - 'Short_t' 1 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1270, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf r - 'UShort_t' 1 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1271, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf i - 'Int_t' 1 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1272, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf h - 'UInt_t' 1 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1273, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf l - 'Long_t' 1 - l", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1274, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf k - 'ULong_t' 1 - l", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1275, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf n - 'Long64_t' 1 - l", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1276, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf m - 'ULong64_t' 1 - l", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1277, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf f - 'Float_t' 1 - f", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1278, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf d - 'Double_t' 1 - d", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1279, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf C - 'Char_t' 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1280, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf u 'TString' - 1 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1281, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf g - 'Bool_t' 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1282, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf c - 'Char_t' 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1283, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf b - 'UChar_t' 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1284, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf s - 'Short_t' 0 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1285, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf r - 'UShort_t' 0 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1286, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf i - 'Int_t' 0 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1287, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf h - 'UInt_t' 0 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1288, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf l - 'Long_t' 0 - l", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1289, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf k - 'ULong_t' 0 - l", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1290, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf n - 'Long64_t' 0 - l", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1291, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf m - 'ULong64_t' 0 - l", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1292, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf f - 'Float_t' 0 - f", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1293, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf d - 'Double_t' 0 - d", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1294, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf C - 'Char_t' 10 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1295, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1296, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf U 'TObject' - 10 - obj", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1297, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1298, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s C - - 10 - cs", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1299, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"C - - 10 - cs u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1300, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s c - - 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1301, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s l - 'Long_t' 0 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1302, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s k - 'ULong_t' 0 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1303, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s n - 'Long64_t' 0 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1304, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s m - 'ULong64_t' 0 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1305, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"c - - 0 - c u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1306, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"l - 'Long_t' 0 - i u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1307, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"k - 'ULong_t' 0 - i u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1308, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - i u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__LinkDef_out__0_1309, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 2, 1, 1, 0, 
"m - 'ULong64_t' 0 - i u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1310, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1311, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 C - - 10 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1312, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TSubString' - 11 - s1 u 'TSubString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1313, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TSubString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1314, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TSubString' - 11 - s1 C - - 10 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1315, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - b U 'TString' - 10 - obj", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1316, 117, G__get_linked_tagnum(&G__LinkDef_outLN_basic_istreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("istream"), 1, 2, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - str u 'TString' - 1 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1317, 117, G__get_linked_tagnum(&G__LinkDef_outLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - str u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1318, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf U 'TString' - 1 - sp", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("ToLower", 716, G__LinkDef_out__0_1319, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("ToUpper", 719, G__LinkDef_out__0_1320, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("Hash", 388, G__LinkDef_out__0_1321, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("Hash", 388, G__LinkDef_out__0_1322, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "U 'TString' - 10 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("Hash", 388, G__LinkDef_out__0_1323, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "C - - 10 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("Form", 404, G__LinkDef_out__0_1324, 67, -1, -1, 0, 1, 8, 1, 0, "C - - 10 - fmt", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func13() {
   G__memfunc_setup("Printf", 627, G__LinkDef_out__0_1325, 121, -1, -1, 0, 1, 8, 1, 0, "C - - 10 - fmt", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("Strip", 530, G__LinkDef_out__0_1326, 67, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - str c - - 0 '' '' c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("StrDup", 610, G__LinkDef_out__0_1327, 67, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("Compress", 844, G__LinkDef_out__0_1328, 67, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("EscChar", 665, G__LinkDef_out__0_1329, 105, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - src C - - 0 - dst "
"i - - 0 - dstlen C - - 0 - specchars "
"c - - 0 - escchar", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("UnEscChar", 860, G__LinkDef_out__0_1330, 105, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - src C - - 0 - dst "
"i - - 0 - dstlen C - - 0 - specchars "
"c - - 0 - escchar", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1331, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__LinkDef_out__0_1332, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__LinkDef_out__0_1333, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__LinkDef_out__0_1334, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__LinkDef_out__0_1335, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1336, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 C - - 10 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__LinkDef_out__0_1337, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 C - - 10 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__LinkDef_out__0_1338, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 C - - 10 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__LinkDef_out__0_1339, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 C - - 10 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__LinkDef_out__0_1340, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 C - - 10 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1341, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1342, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__LinkDef_out__0_1343, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__LinkDef_out__0_1344, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__LinkDef_out__0_1345, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__LinkDef_out__0_1346, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1347, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TSubString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1348, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - s1 u 'TSubString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1349, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TSubString' - 11 - s1 C - - 10 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1350, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TSubString' - 11 - s1 u 'TString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1351, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TSubString' - 11 - s1 u 'TSubString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1352, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - s1 u 'TSubString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1353, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - s1 u 'TSubString' - 11 - s2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1354, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TDatime' - 11 - d1 u 'TDatime' - 11 - d2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1355, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TDatime' - 11 - d1 u 'TDatime' - 11 - d2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__LinkDef_out__0_1356, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TDatime' - 11 - d1 u 'TDatime' - 11 - d2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__LinkDef_out__0_1357, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TDatime' - 11 - d1 u 'TDatime' - 11 - d2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__LinkDef_out__0_1358, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TDatime' - 11 - d1 u 'TDatime' - 11 - d2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__LinkDef_out__0_1359, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TDatime' - 11 - d1 u 'TDatime' - 11 - d2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1360, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf u 'TUUID' - 1 - uuid", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1361, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf u 'TUUID' - 11 - uuid", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__LinkDef_out__0_1362, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TUUID' - 11 - u1 u 'TUUID' - 11 - u2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__LinkDef_out__0_1363, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TUUID' - 11 - u1 u 'TUUID' - 11 - u2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1364, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - b U 'TArray' - 10 - obj", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1365, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf U 'TArray' - 1 - obj", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1366, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf U 'TArrayD' - 1 - obj", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1367, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf U 'TArrayD' - 10 - obj", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__LinkDef_out__0_1368, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf U 'TArrayI' - 1 - obj", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__LinkDef_out__0_1369, 117, G__get_linked_tagnum(&G__LinkDef_outLN_TBuffer), -1, 1, 2, 1, 1, 0, 
"u 'TBuffer' - 1 - buf U 'TArrayI' - 10 - obj", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
   G__memfunc_setup("TTreeBranchImpRef", 1653, G__LinkDef_out__0_1766, 85, G__get_linked_tagnum(&G__LinkDef_outLN_TBranch), -1, 0, 7, 1, 1, 0, 
"U 'TTree' - 0 - tree C - - 10 - branchname "
"U 'TClass' - 0 - ptrClass i 'EDataType' - 0 - datatype "
"Y - - 0 - addobj i - 'Int_t' 0 - bufsize "
"i - 'Int_t' 0 - splitlevel", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLinkDef_out() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LinkDef_outLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TSubString = { "TSubString" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__LinkDef_outLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TUUID = { "TUUID" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_EDataType = { "EDataType" , 101 , -1 };
G__linked_taginfo G__LinkDef_outLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TArray = { "TArray" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_babyMaker = { "babyMaker" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR = { "vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> >,allocator<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> >,allocator<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__LinkDef_outLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLinkDef_out() {
  G__LinkDef_outLN_TClass.tagnum = -1 ;
  G__LinkDef_outLN_TBuffer.tagnum = -1 ;
  G__LinkDef_outLN_TObject.tagnum = -1 ;
  G__LinkDef_outLN_TString.tagnum = -1 ;
  G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_string.tagnum = -1 ;
  G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDef_outLN_TSubString.tagnum = -1 ;
  G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__LinkDef_outLN_TDatime.tagnum = -1 ;
  G__LinkDef_outLN_TFile.tagnum = -1 ;
  G__LinkDef_outLN_TUUID.tagnum = -1 ;
  G__LinkDef_outLN_EDataType.tagnum = -1 ;
  G__LinkDef_outLN_TTree.tagnum = -1 ;
  G__LinkDef_outLN_TBranch.tagnum = -1 ;
  G__LinkDef_outLN_TArray.tagnum = -1 ;
  G__LinkDef_outLN_TArrayD.tagnum = -1 ;
  G__LinkDef_outLN_TArrayI.tagnum = -1 ;
  G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_TChain.tagnum = -1 ;
  G__LinkDef_outLN_babyMaker.tagnum = -1 ;
  G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__LinkDef_outLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLinkDef_out() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TClass);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TObject);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TString);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_string);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TSubString);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TDatime);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TFile);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TUUID);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_EDataType);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TTree);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TBranch);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TArray);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDef_outLN_babyMaker),sizeof(babyMaker),-1,1280,(char*)NULL,G__setup_memvarbabyMaker,G__setup_memfuncbabyMaker);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_vectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_reverse_iteratorlEvectorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRcOallocatorlEROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDef_outLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupLinkDef_out(void) {
  G__check_setup_version(30051515,"G__cpp_setupLinkDef_out()");
  G__set_cpp_environmentLinkDef_out();
  G__cpp_setup_tagtableLinkDef_out();

  G__cpp_setup_inheritanceLinkDef_out();

  G__cpp_setup_typetableLinkDef_out();

  G__cpp_setup_memvarLinkDef_out();

  G__cpp_setup_memfuncLinkDef_out();
  G__cpp_setup_globalLinkDef_out();
  G__cpp_setup_funcLinkDef_out();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLinkDef_out();
  return;
}
class G__cpp_setup_initLinkDef_out {
  public:
    G__cpp_setup_initLinkDef_out() { G__add_setup_func("LinkDef_out",(G__incsetup)(&G__cpp_setupLinkDef_out)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLinkDef_out() { G__remove_setup_func("LinkDef_out"); }
};
G__cpp_setup_initLinkDef_out G__cpp_setup_initializerLinkDef_out;

